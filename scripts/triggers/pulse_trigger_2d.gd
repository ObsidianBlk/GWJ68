extends RelayTrigger2D
class_name PulseTrigger2D

# ------------------------------------------------------------------------------
# Signals
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Constants and ENUMs
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Export Variables
# ------------------------------------------------------------------------------
@export_category("Pulse Trigger 2D")
@export var pulse_interval : float = 1.0

# ------------------------------------------------------------------------------
# Variables
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Onready Variables
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Setters / Getters
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Override Methods
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Private Methods
# ------------------------------------------------------------------------------
func _Pulse() -> void:
	if pulse_interval > 0.0:
		get_tree().create_timer(pulse_interval).timeout.connect(_on_pulse_timeout, CONNECT_ONE_SHOT)

# ------------------------------------------------------------------------------
# Public Methods
# ------------------------------------------------------------------------------
func trigger(on : bool) -> void:
	super.trigger(on)
	if is_active():
		_Pulse()

# ------------------------------------------------------------------------------
# Handler Methods
# ------------------------------------------------------------------------------
func _on_pulse_timeout() -> void:
	if is_active():
		_EmitStateChange.call_deferred(_state)
		_Pulse()


