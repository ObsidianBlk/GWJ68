extends Camera2D
class_name PlayerCamera2D

# ------------------------------------------------------------------------------
# Signals
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Constants and ENUMs
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Export Variables
# ------------------------------------------------------------------------------
@export_category("PlayerCamera2D")
@export var edge_left_px : int = -1000
@export var edge_right_px : int = 1000
@export var edge_top_px : int = -1000
@export var edge_bottom_px : int = 1000

# ------------------------------------------------------------------------------
# Variables
# ------------------------------------------------------------------------------
var _drag_active : bool = false
var _senitivity : Vector2 = Vector2(0.2, 0.2)
var _invert_x : bool = false
var _invert_y : bool = false

# ------------------------------------------------------------------------------
# Onready Variables
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Setters / Getters
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Override Methods
# ------------------------------------------------------------------------------
func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventMouseMotion and _drag_active:
		position += event.relative * _senitivity * Vector2(
			1 if _invert_x else -1,
			1 if _invert_y else -1
		)
		position.x = clampf(position.x, edge_left_px, edge_right_px)
		position.y = clampf(position.y, edge_top_px, edge_bottom_px)
	elif event is InputEventMouseButton:
		if event.button_index == MOUSE_BUTTON_RIGHT:
			_drag_active = event.pressed

# ------------------------------------------------------------------------------
# Private Methods
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Public Methods
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Handler Methods
# ------------------------------------------------------------------------------



